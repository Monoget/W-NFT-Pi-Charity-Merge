{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Container","styled","div","image","flex","fd","jc","ai","test","p","App","btn_amount","useDispatch","useSelector","useState","setFeedback","claimingNft","setClaimingNft","getData","nftClaim","_amount","document","getElementById","innerHTML","mint","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","useEffect","className","style","backgroundImage","fontSize","fontWeight","color","borderRadius","onClick","parseInt","alert","id","Number","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.838d1cd5.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/NP.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 137) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0x5b52937b87d925098731e6fef5be4c0282bbe6bf\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Polygon.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {connect} from \"./redux/blockchain/blockchainActions\";\r\nimport {fetchData} from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport './css/app.9874624c.css';\r\n\r\nfunction App() {\r\n    let btn_amount = 1;\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\r\n    const [claimingNft, setClaimingNft] = useState(false);\r\n\r\n    let claimNFTs = (_amount) => {\r\n        if (_amount <= 0) {\r\n            return;\r\n        }\r\n        setFeedback(\"Minting Pi Charity Club nfts...\");\r\n        setClaimingNft(true);\r\n        blockchain.smartContract.methods\r\n            .mint(_amount)\r\n            .send({\r\n                gasLimit: \"285000\",\r\n                to: \"0x47F465C30d47B75A5C0D5C016b5cE4dC1d4a36D0\",\r\n                from: blockchain.account,\r\n                value: blockchain.web3.utils.toWei((188.54 * _amount).toString(), \"ether\"),\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err);\r\n                setFeedback(\"Sorry, something went wrong please try again later.\");\r\n                setClaimingNft(false);\r\n            })\r\n            .then((receipt) => {\r\n                setFeedback(\r\n                    \"WOW, you now own a Pi. go visit Opensea.io to view it.\"\r\n                );\r\n                setClaimingNft(false);\r\n                dispatch(fetchData(blockchain.account));\r\n            });\r\n    };\r\n\r\n    const getData = () => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData(blockchain.account));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [blockchain.account]);\r\n\r\n    function plus() {\r\n        btn_amount = parseInt(btn_amount) + 1;\r\n        if((blockchain.account === \"\") || (blockchain.smartContract === null)){\r\n            alert(\"Please Connect The Wallet First\");\r\n        }else if (btn_amount <= 20) {\r\n            let btn = document.getElementById(\"mint_amount\");\r\n            btn.innerHTML = btn_amount;\r\n        } else {\r\n            alert(\"Mint amount can not be more than 20\");\r\n        }\r\n    }\r\n\r\n    function minus() {\r\n        btn_amount = parseInt(btn_amount) - 1;\r\n        if((blockchain.account === \"\") || (blockchain.smartContract === null)){\r\n            alert(\"Please Connect The Wallet First\");\r\n        }else if (btn_amount >= 1) {\r\n            let btn = document.getElementById(\"mint_amount\");\r\n            btn.innerHTML = btn_amount;\r\n        } else {\r\n            alert(\"Mint amount can not be less than 1\");\r\n        }\r\n    }\r\n\r\n    function nftClaim() {\r\n        let btn = document.getElementById(\"mint_amount\");\r\n        btn.innerHTML = btn_amount;\r\n        claimNFTs(btn_amount);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page\" style={{backgroundImage: `url(\"./img/gold-digger-house-4@1x.2c3b3a00.png\")`}}>\r\n                <div className=\"viewContainer mint\">\r\n                    <div className=\"mintCard\">\r\n                        <center>\r\n                            <p className=\"title1 mintTitle\"\r\n                               style={{fontSize: \"70px\", fontWeight: \"bold\", color: 'white'}}>THE PI CHARITY CLUB</p>\r\n                            <p className=\"title1 mintTitle\" style={{fontSize: \"20px\", color: 'white'}}>PI Holders are\r\n                                official\r\n                                investors of school in\r\n                                Africa</p>\r\n                        </center>\r\n                        <div className=\"inline22\">\r\n                            <button className=\"mintButton\" style={{borderRadius: '50%'}} onClick={minus}>-</button>\r\n                            <button className=\"mintButton1 selected\" id=\"mint_amount\">1</button>\r\n                            <button className=\"mintButton\" style={{borderRadius: '50%'}} onClick={plus}>+</button>\r\n                        </div>\r\n                        <p className=\"text nftPrice titleFont\" style={{fontSize: 25}}>Price : 0.11 ETH</p>\r\n                        <div className=\"text nbNft titleFont\" style={{fontSize: 25}}>Minted : {data.totalSupply} /\r\n                            3141\r\n                        </div>\r\n\r\n\r\n                        {(Number(data.totalSupply) == 2341) ? (\r\n                            <p className=\"text nbNft titleFont\" style={{fontSize: \"20px\", color: 'white'}}>The sale has\r\n                                ended.\r\n                            </p>\r\n                        ) : (\r\n                            <>\r\n                                {(blockchain.account === \"\") || (blockchain.smartContract === null) ? (\r\n                                    <s.Container ai={\"center\"} jc={\"center\"}>\r\n                                        <p className=\"text nbNft titleFont\" style={{fontSize: \"20px\", color: 'white'}}>\r\n                                            Connect to the Polygon network\r\n                                        </p>\r\n                                        <button className=\"connectButton titleFont\" style={{fontWeight: \"bold\"}}\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    dispatch(connect());\r\n                                                    getData();\r\n                                                }}\r\n                                        >\r\n                                            Connect wallet\r\n                                        </button>\r\n                                        {(blockchain.errorMsg !== \"\") ? (\r\n                                            <>\r\n                                                <p className=\"text nbNft titleFont\"\r\n                                                   style={{fontSize: \"20px\", color: 'white'}}>\r\n                                                    {blockchain.errorMsg}\r\n                                                </p>\r\n                                            </>\r\n                                        ) : null}\r\n                                    </s.Container>\r\n                                ) : (\r\n                                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                                        <button className=\"validateButton titleFont\" style={{fontWeight: \"bold\"}} onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            nftClaim();\r\n                                            getData();\r\n                                        }}>\r\n                                            {claimingNft ? \"Processing..\" : \"Mint\"}\r\n                                        </button>\r\n                                    </s.Container>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <img src=\"./img/redlip.png\" className=\"redlip22\"/>\r\n                <img src=\"./img/coin-5@1x_cut.a0f51c8b.png\" className=\"coin22\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}